---
interface Props {
  src?: string;
  alt?: string;
  initials?: string;
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  status?: 'online' | 'offline' | 'busy' | 'away';
  class?: string;
}

const {
  src,
  alt = '',
  initials,
  size = 'md',
  status,
  class: className
} = Astro.props;

const sizes = {
  xs: 'w-6 h-6 text-xs',
  sm: 'w-8 h-8 text-sm',
  md: 'w-10 h-10 text-base',
  lg: 'w-12 h-12 text-lg',
  xl: 'w-14 h-14 text-xl'
};

const statusColors = {
  online: 'bg-green-400',
  offline: 'bg-gray-400',
  busy: 'bg-red-400',
  away: 'bg-yellow-400'
};
---

<div class="relative inline-block">
  {src ? (
    <img
      src={src}
      alt={alt}
      class:list={[
        'rounded-full object-cover',
        sizes[size],
        className
      ]}
    />
  ) : (
    <div class:list={[
      'rounded-full flex items-center justify-center bg-gray-200 dark:bg-gray-700',
      'text-gray-600 dark:text-gray-300 font-medium uppercase',
      sizes[size],
      className
    ]}>
      {initials?.slice(0, 2)}
    </div>
  )}
  
  {status && (
    <span class:list={[
      'absolute bottom-0 right-0 block rounded-full ring-2 ring-white dark:ring-gray-900',
      statusColors[status],
      size === 'xs' ? 'w-1.5 h-1.5' :
      size === 'sm' ? 'w-2 h-2' :
      size === 'md' ? 'w-2.5 h-2.5' :
      size === 'lg' ? 'w-3 h-3' : 'w-3.5 h-3.5'
    ]} />
  )}
</div> 