---
interface Props {
  id: string;
  title: string;
  showClose?: boolean;
}

const {
  id,
  title,
  showClose = true
} = Astro.props;
---

<div
  id={id}
  class="modal-overlay hidden"
  role="dialog"
  aria-modal="true"
>
  <div class="modal-container">
    <div class="modal-content">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
          {title}
        </h3>
        {showClose && (
          <button
            type="button"
            class="text-gray-400 hover:text-gray-500 dark:hover:text-gray-300"
            data-close-modal
          >
            <span class="sr-only">Close</span>
            <Icon name="lucide:x" class="w-5 h-5" />
          </button>
        )}
      </div>
      <div class="space-y-4">
        <slot />
      </div>
    </div>
  </div>
</div>

<script>
  // Modal functionality
  document.addEventListener('DOMContentLoaded', () => {
    const modals = document.querySelectorAll('[role="dialog"]');
    
    modals.forEach(modal => {
      const closeBtn = modal.querySelector('[data-close-modal]');
      
      closeBtn?.addEventListener('click', () => {
        modal.classList.add('hidden');
      });

      // Close on overlay click
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.classList.add('hidden');
        }
      });

      // Close on Escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
          modal.classList.add('hidden');
        }
      });
    });
  });
</script> 