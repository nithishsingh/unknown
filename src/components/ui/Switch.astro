---
interface Props {
  label?: string;
  name: string;
  checked?: boolean;
  disabled?: boolean;
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const {
  label,
  name,
  checked = false,
  disabled = false,
  size = 'md',
  class: className
} = Astro.props;

const sizes = {
  sm: {
    switch: 'w-8 h-4',
    thumb: 'h-3 w-3',
    translate: 'translate-x-4'
  },
  md: {
    switch: 'w-11 h-6',
    thumb: 'h-5 w-5',
    translate: 'translate-x-5'
  },
  lg: {
    switch: 'w-14 h-7',
    thumb: 'h-6 w-6',
    translate: 'translate-x-7'
  }
};
---

<label
  class:list={[
    "relative inline-flex items-center",
    disabled && "opacity-50 cursor-not-allowed",
    className
  ]}
>
  <input
    type="checkbox"
    name={name}
    checked={checked}
    disabled={disabled}
    class="sr-only peer"
  />
  <div
    class:list={[
      "relative rounded-full transition-colors duration-200 ease-in-out",
      "bg-gray-200 peer-checked:bg-primary-600",
      "dark:bg-gray-700 dark:peer-checked:bg-primary-500",
      "peer-focus:outline-none peer-focus:ring-4",
      "peer-focus:ring-primary-300 dark:peer-focus:ring-primary-800",
      sizes[size].switch
    ]}
  >
    <span
      class:list={[
        "absolute top-1/2 -translate-y-1/2 left-1",
        "rounded-full bg-white transition-transform duration-200",
        "peer-checked:" + sizes[size].translate,
        sizes[size].thumb
      ]}
      aria-hidden="true"
    />
  </div>
  {label && (
    <span
      class:list={[
        "ml-3 text-sm font-medium text-gray-900 dark:text-gray-300",
        disabled && "cursor-not-allowed"
      ]}
    >
      {label}
    </span>
  )}
</label>

<script>
  // Add change event handler
  const switches = document.querySelectorAll('input[type="checkbox"]');
  
  switches.forEach(switchEl => {
    switchEl.addEventListener('change', (e) => {
      const target = e.target as HTMLInputElement;
      // Dispatch custom event with checked state
      const event = new CustomEvent('switch-change', {
        detail: { checked: target.checked }
      });
      target.dispatchEvent(event);
    });
  });
</script> 