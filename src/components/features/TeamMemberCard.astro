---
interface SocialLink {
  platform: 'linkedin' | 'twitter' | 'github' | 'email';
  url: string;
}

interface Props {
  name: string;
  title: string;
  image: {
    src: string;
    alt: string;
  };
  bio?: string;
  socialLinks?: SocialLink[];
  class?: string;
}

const {
  name,
  title,
  image,
  bio,
  socialLinks,
  class: className
} = Astro.props;

import { Icon } from 'astro-icon/components';

const socialIcons = {
  linkedin: 'lucide:linkedin',
  twitter: 'lucide:twitter',
  github: 'lucide:github',
  email: 'lucide:mail'
};
---

<div
  class:list={[
    "bg-white dark:bg-dark-surface rounded-xl overflow-hidden",
    "border border-gray-200 dark:border-gray-700",
    "transition-all duration-300 hover:shadow-lg",
    className
  ]}
>
  <div class="aspect-square overflow-hidden">
    <img
      src={image.src}
      alt={image.alt}
      class="w-full h-full object-cover"
    />
  </div>

  <div class="p-6">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
      {name}
    </h3>
    
    <div class="text-sm text-primary-600 dark:text-primary-400 mb-3">
      {title}
    </div>

    {bio && (
      <p class="text-gray-600 dark:text-gray-400 text-sm mb-4">
        {bio}
      </p>
    )}

    {socialLinks && socialLinks.length > 0 && (
      <div class="flex gap-3">
        {socialLinks.map(({ platform, url }) => (
          <a
            href={url}
            target="_blank"
            rel="noopener noreferrer"
            class="text-gray-400 hover:text-gray-500 dark:hover:text-gray-300"
            aria-label={`${name}'s ${platform}`}
          >
            <Icon name={socialIcons[platform]} class="w-5 h-5" />
          </a>
        ))}
      </div>
    )}
  </div>
</div> 