---
interface Props {
  title?: string;
  description?: string;
  placeholder?: string;
  buttonText?: string;
  class?: string;
}

const {
  title = "Subscribe to our newsletter",
  description = "Get the latest news and updates delivered to your inbox.",
  placeholder = "Enter your email",
  buttonText = "Subscribe",
  class: className
} = Astro.props;
---

<div
  class:list={[
    "bg-white dark:bg-dark-surface rounded-xl",
    "border border-gray-200 dark:border-gray-700",
    "p-6 sm:p-8",
    className
  ]}
>
  <div class="text-center mb-6">
    <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
      {title}
    </h3>
    <p class="text-gray-600 dark:text-gray-400">
      {description}
    </p>
  </div>

  <form class="flex flex-col sm:flex-row gap-3">
    <div class="flex-1">
      <label for="email-address" class="sr-only">Email address</label>
      <input
        id="email-address"
        name="email"
        type="email"
        required
        class="input-base"
        placeholder={placeholder}
      />
    </div>
    <button
      type="submit"
      class="btn btn-primary whitespace-nowrap"
    >
      {buttonText}
    </button>
  </form>

  <p class="mt-3 text-sm text-gray-500 dark:text-gray-400">
    We care about your data. Read our <a href="/privacy" class="text-primary-600 hover:text-primary-500">Privacy Policy</a>.
  </p>
</div>

<script>
  const form = document.querySelector('form');
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const email = (form.querySelector('input[type="email"]') as HTMLInputElement).value;
    const button = form.querySelector('button') as HTMLButtonElement | null;
    const originalButtonText = button?.textContent;
    
    try {
      if (button) {
        button.disabled = true;
        button.innerHTML = `
          <svg class="animate-spin h-5 w-5" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
        `;
      }
      
      // Replace with your newsletter signup logic
      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulated delay
      
      // Show success message
      form.innerHTML = `
        <div class="text-center py-4">
          <svg class="mx-auto h-12 w-12 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <p class="mt-2 text-gray-600 dark:text-gray-400">Thanks for subscribing!</p>
        </div>
      `;
      
    } catch (error) {
      console.error('Newsletter signup error:', error);
      if (button) {
        button.disabled = false;
        button.textContent = originalButtonText || 'Subscribe';
      }
      
      // Show error message
      const errorDiv = document.createElement('div');
      errorDiv.className = 'mt-3 text-sm text-red-600 dark:text-red-400';
      errorDiv.textContent = 'An error occurred. Please try again later.';
      form.appendChild(errorDiv);
    }
  });
</script> 